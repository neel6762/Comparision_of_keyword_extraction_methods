Decentralized orchestration of composite web services Web services make information and software available programmatically via the Internet and may be used as building blocks for applications . A composite web service is one that is built using multiple component web services and is typically specified using a language such as BPEL4WS or WSIPL . Once its specification has been developed , the composite service may be orchestrated either in a centralized or in a decentralized fashion . Decentralized orchestration offers performance improvements in terms of increased throughput and scalability and lower response time . However , decentralized orchestration also brings additional complexity to the system in terms of error recovery and fault handling . Further , incorrect design of a decentralized system can lead to potential deadlock or non-optimal usage of system resources . This paper investigates build time and runtime issues related to decentralized orchestration of composite web services . We support our design decisions with performance results obtained on a decentralized setup using BPEL4WS to describe the composite web services and BPWS4J as the underlying runtime environment to orchestrate them .
